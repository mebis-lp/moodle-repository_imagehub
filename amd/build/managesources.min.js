define("repository_imagehub/managesources",["exports","core_form/modalform","core/str","core/notification","repository_imagehub/webservices"],(function(_exports,_modalform,_str,_notification,externalServices){var obj;function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_modalform=(obj=_modalform)&&obj.__esModule?obj:{default:obj},externalServices=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(externalServices);function showModal(e,id){let title;e.preventDefault(),title=0===id?(0,_str.get_string)("addsource","repository_imagehub"):(0,_str.get_string)("editsource","repository_imagehub");const modalForm=new _modalform.default({formClass:"repository_imagehub\\form\\managesources_form",args:{id:id},modalConfig:{title:title}});modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,(()=>location.reload())),modalForm.show()}_exports.init=async()=>{document.getElementById("addsource").addEventListener("click",(async e=>{showModal(e,0)})),document.getElementsByClassName("edit").forEach((element=>{element.addEventListener("click",(async e=>{showModal(e,element.dataset.id)}))})),document.getElementsByClassName("delete").forEach((element=>{element.addEventListener("click",(async e=>{!function(e,id,title){e.preventDefault(),(0,_notification.deleteCancelPromise)((0,_str.get_string)("delete","repository_imagehub",title),(0,_str.get_string)("deletewarning","repository_imagehub")).then((async()=>{if(0!==id)try{console.log(id);if(await externalServices.deleteSource(id)){console.log(id);const row=document.querySelector('[sourceid="'+id+'"]');row&&(console.log(row),row.remove())}}catch(error){(0,_notification.exception)(error)}})).catch((()=>{}))}(e,element.dataset.id,element.dataset.title)}))}))}}));

//# sourceMappingURL=managesources.min.js.map