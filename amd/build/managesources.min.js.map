{"version":3,"file":"managesources.min.js","sources":["../src/managesources.js"],"sourcesContent":["import ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\nimport {exception as displayException, deleteCancelPromise} from 'core/notification';\nimport * as externalServices from 'repository_imagehub/webservices';\n\nexport const init = async() => {\n\n    // Add listener for adding a new source.\n    let addsource = document.getElementById('addsource');\n    addsource.addEventListener('click', async(e) => {\n        showModal(e, 0);\n    });\n\n    // Add listener to edit sources.\n    let editsources = document.getElementsByClassName('edit');\n    editsources.forEach(element => {\n        element.addEventListener('click', async(e) => {\n            showModal(e, element.dataset.id);\n        });\n    });\n\n    // Add listener to delete sources.\n    let deletesources = document.getElementsByClassName('delete');\n    deletesources.forEach(element => {\n        element.addEventListener('click', async(e) => {\n            deleteModal(e, element.dataset.id, element.dataset.title);\n        });\n    });\n};\n\n/**\n * Show dynamic form to add/edit a source.\n * @param {*} e\n * @param {*} id\n */\nfunction showModal(e, id) {\n    e.preventDefault();\n    let title;\n    if (id === 0) {\n        title = getString('addsource', 'repository_imagehub');\n    } else {\n        title = getString('editsource', 'repository_imagehub');\n    }\n\n    const modalForm = new ModalForm({\n        formClass: \"repository_imagehub\\\\form\\\\managesources_form\",\n        args: {\n            id: id,\n        },\n        modalConfig: {title: title},\n    });\n    // Reload page after submit.\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => location.reload());\n\n    modalForm.show();\n}\n\n/**\n * Show dynamic form to delete a source.\n * @param {*} e\n * @param {*} id\n * @param {*} title\n */\nfunction deleteModal(e, id, title) {\n    e.preventDefault();\n\n    deleteCancelPromise(\n        getString('delete', 'repository_imagehub', title),\n        getString('deletewarning', 'repository_imagehub'),\n    ).then(async() => {\n        if (id !== 0) {\n            try {\n                const deleted = await externalServices.deleteSource(id);\n                if (deleted) {\n                    const row = document.querySelector('[sourceid=\"' + id + '\"]');\n                    if (row) {\n                        row.remove();\n                    }\n                }\n            } catch (error) {\n                displayException(error);\n            }\n        }\n        return;\n    }).catch(() => {\n        return;\n    });\n}\n"],"names":["showModal","e","id","title","preventDefault","modalForm","ModalForm","formClass","args","modalConfig","addEventListener","events","FORM_SUBMITTED","location","reload","show","async","document","getElementById","getElementsByClassName","forEach","element","dataset","then","externalServices","deleteSource","row","querySelector","remove","error","catch","deleteModal"],"mappings":"gzCAmCSA,UAAUC,EAAGC,QAEdC,MADJF,EAAEG,iBAGED,MADO,IAAPD,IACQ,mBAAU,YAAa,wBAEvB,mBAAU,aAAc,6BAG9BG,UAAY,IAAIC,mBAAU,CAC5BC,UAAW,gDACXC,KAAM,CACFN,GAAIA,IAERO,YAAa,CAACN,MAAOA,SAGzBE,UAAUK,iBAAiBL,UAAUM,OAAOC,gBAAgB,IAAMC,SAASC,WAE3ET,UAAUU,qBAjDMC,UAGAC,SAASC,eAAe,aAC9BR,iBAAiB,SAASM,MAAAA,IAChChB,UAAUC,EAAG,MAICgB,SAASE,uBAAuB,QACtCC,SAAQC,UAChBA,QAAQX,iBAAiB,SAASM,MAAAA,IAC9BhB,UAAUC,EAAGoB,QAAQC,QAAQpB,UAKjBe,SAASE,uBAAuB,UACtCC,SAAQC,UAClBA,QAAQX,iBAAiB,SAASM,MAAAA,cAuCrBf,EAAGC,GAAIC,OACxBF,EAAEG,wDAGE,mBAAU,SAAU,sBAAuBD,QAC3C,mBAAU,gBAAiB,wBAC7BoB,MAAKP,aACQ,IAAPd,gBAE0BsB,iBAAiBC,aAAavB,IACvC,OACHwB,IAAMT,SAASU,cAAc,cAAgBzB,GAAK,MACpDwB,KACAA,IAAIE,UAGd,MAAOC,mCACYA,WAI1BC,OAAM,SA3DDC,CAAY9B,EAAGoB,QAAQC,QAAQpB,GAAImB,QAAQC,QAAQnB"}